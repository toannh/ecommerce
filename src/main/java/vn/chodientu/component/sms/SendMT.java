
package vn.chodientu.component.sms;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceException;
import javax.xml.ws.WebServiceFeature;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.6-1b01 
 * Generated source version: 2.2
 * 
 */
@WebServiceClient(name = "SendMT", targetNamespace = "http://sms.neo", wsdlLocation = "http://g3g4.vn/smsws/services/SendMT?wsdl")
public class SendMT
    extends Service
{

    private final static URL SENDMT_WSDL_LOCATION;
    private final static WebServiceException SENDMT_EXCEPTION;
    private final static QName SENDMT_QNAME = new QName("http://sms.neo", "SendMT");

    static {
        URL url = null;
        WebServiceException e = null;
        try {
            url = new URL("http://g3g4.vn/smsws/services/SendMT?wsdl");
        } catch (MalformedURLException ex) {
            e = new WebServiceException(ex);
        }
        SENDMT_WSDL_LOCATION = url;
        SENDMT_EXCEPTION = e;
    }

    public SendMT() {
        super(__getWsdlLocation(), SENDMT_QNAME);
    }

    public SendMT(WebServiceFeature... features) {
        super(__getWsdlLocation(), SENDMT_QNAME, features);
    }

    public SendMT(URL wsdlLocation) {
        super(wsdlLocation, SENDMT_QNAME);
    }

    public SendMT(URL wsdlLocation, WebServiceFeature... features) {
        super(wsdlLocation, SENDMT_QNAME, features);
    }

    public SendMT(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public SendMT(URL wsdlLocation, QName serviceName, WebServiceFeature... features) {
        super(wsdlLocation, serviceName, features);
    }

    /**
     * 
     * @return
     *     returns SendMTPortType
     */
    @WebEndpoint(name = "SendMTHttpSoap11Endpoint")
    public SendMTPortType getSendMTHttpSoap11Endpoint() {
        return super.getPort(new QName("http://sms.neo", "SendMTHttpSoap11Endpoint"), SendMTPortType.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns SendMTPortType
     */
    @WebEndpoint(name = "SendMTHttpSoap11Endpoint")
    public SendMTPortType getSendMTHttpSoap11Endpoint(WebServiceFeature... features) {
        return super.getPort(new QName("http://sms.neo", "SendMTHttpSoap11Endpoint"), SendMTPortType.class, features);
    }

    /**
     * 
     * @return
     *     returns SendMTPortType
     */
    @WebEndpoint(name = "SendMTHttpSoap12Endpoint")
    public SendMTPortType getSendMTHttpSoap12Endpoint() {
        return super.getPort(new QName("http://sms.neo", "SendMTHttpSoap12Endpoint"), SendMTPortType.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns SendMTPortType
     */
    @WebEndpoint(name = "SendMTHttpSoap12Endpoint")
    public SendMTPortType getSendMTHttpSoap12Endpoint(WebServiceFeature... features) {
        return super.getPort(new QName("http://sms.neo", "SendMTHttpSoap12Endpoint"), SendMTPortType.class, features);
    }

    /**
     * 
     * @return
     *     returns SendMTPortType
     */
    @WebEndpoint(name = "SendMTHttpEndpoint")
    public SendMTPortType getSendMTHttpEndpoint() {
        return super.getPort(new QName("http://sms.neo", "SendMTHttpEndpoint"), SendMTPortType.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns SendMTPortType
     */
    @WebEndpoint(name = "SendMTHttpEndpoint")
    public SendMTPortType getSendMTHttpEndpoint(WebServiceFeature... features) {
        return super.getPort(new QName("http://sms.neo", "SendMTHttpEndpoint"), SendMTPortType.class, features);
    }

    private static URL __getWsdlLocation() {
        if (SENDMT_EXCEPTION!= null) {
            throw SENDMT_EXCEPTION;
        }
        return SENDMT_WSDL_LOCATION;
    }

}
